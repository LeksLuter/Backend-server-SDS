// backend/server.js
const express = require('express');
const fs = require('fs').promises;
const path = require('path');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 3001; // –ò—Å–ø–æ–ª—å–∑—É–µ–º PORT –∏–∑ env, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω

// Middleware
app.use(cors({
  origin: '*', // –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–∞–µ–º CORS —Å–æ –≤—Å–µ—Ö origins
  // origin: 'http://localhost:3000', // –ú–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω—ã–π origin —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
  credentials: true
}));
app.use(express.json());

// –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
const CONFIG_DIR = path.join(__dirname, 'admin_configs');
(async () => {
  try {
    await fs.mkdir(CONFIG_DIR, { recursive: true });
  } catch (err) {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –∫–æ–Ω—Ñ–∏–≥–æ–≤:', err);
  }
})();

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥–∞
const getConfigPath = (adminAddress) => {
  const safeAddress = adminAddress.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();
  return path.join(CONFIG_DIR, `${safeAddress}.json`);
};

// --- –ù–û–í–´–ô ENDPOINT: –°—Ç—Ä–∞–Ω–∏—Ü–∞-–∑–∞–≥–ª—É—à–∫–∞ ---
// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç GET-–∑–∞–ø—Ä–æ—Å—ã –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É –ø—É—Ç–∏ '/'
app.get('/', (req, res) => {
  res.setHeader('Content-Type', 'text/html; charset=utf-8');
  res.status(200).send(`
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–°–µ—Ä–≤–µ—Ä –±—ç–∫–µ–Ω–¥–∞ –∞–¥–º–∏–Ω–∫–∏</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background: linear-gradient(135deg, #1a2a6c, #2c3e50);
                color: #fff;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                margin: 0;
                text-align: center;
            }
            .container {
                background-color: rgba(0, 0, 0, 0.7);
                padding: 2rem;
                border-radius: 15px;
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
                max-width: 90%;
                width: 500px;
            }
            h1 {
                color: #4CAF50; /* –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ "—Ä–∞–±–æ—Ç–∞–µ—Ç" */
                margin-bottom: 1rem;
            }
            p {
                font-size: 1.1rem;
                margin-bottom: 1.5rem;
            }
            .status {
                display: inline-block;
                padding: 0.5rem 1rem;
                background-color: #4CAF50;
                color: white;
                border-radius: 20px;
                font-weight: bold;
                margin-top: 1rem;
            }
            .api-info {
                background-color: rgba(255, 255, 255, 0.1);
                padding: 1rem;
                border-radius: 10px;
                margin-top: 1.5rem;
                text-align: left;
                font-size: 0.9rem;
            }
            .api-info h2 {
                margin-top: 0;
                color: #3498db;
                text-align: center;
            }
            .api-info ul {
                padding-left: 1.2rem;
            }
            .api-info li {
                margin-bottom: 0.5rem;
            }
            .api-info code {
                background-color: rgba(0, 0, 0, 0.3);
                padding: 0.2rem 0.4rem;
                border-radius: 4px;
                font-family: 'Courier New', monospace;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>–°–µ—Ä–≤–µ—Ä –±—ç–∫–µ–Ω–¥–∞ –∞–¥–º–∏–Ω–∫–∏</h1>
            <p>–≠—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç API –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.</p>
            <div class="status">‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç</div>

            <div class="api-info">
                <h2>–î–æ—Å—Ç—É–ø–Ω—ã–µ API-endpoints:</h2>
                <ul>
                    <li><strong>GET</strong> <code>/api/admin/config</code> - –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–æ–∫ <code>X-Admin-Address</code>)</li>
                    <li><strong>POST</strong> <code>/api/admin/config</code> - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–æ–∫ <code>X-Admin-Address</code> –∏ JSON-—Ç–µ–ª–æ)</li>
                </ul>
            </div>
        </div>
    </body>
    </html>
  `);
});
// --- –ö–û–ù–ï–¶ –ù–û–í–û–ì–û ENDPOINT'–ê ---

// --- –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï API Endpoints ---

// GET /api/admin/config - –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
app.get('/api/admin/config', async (req, res) => {
  const adminAddress = req.headers['x-admin-address'];

  if (!adminAddress) {
    return res.status(400).json({ error: '–¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–æ–∫ X-Admin-Address' });
  }

  try {
    const configPath = getConfigPath(adminAddress);
    const data = await fs.readFile(configPath, 'utf8');
    const config = JSON.parse(data);
    res.json(config);
  } catch (err) {
    if (err.code === 'ENOENT') {
      return res.status(404).json({ error: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
    }
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥–∞:', err);
    res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// POST /api/admin/config - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
app.post('/api/admin/config', async (req, res) => {
  const adminAddress = req.headers['x-admin-address'];
  const configData = req.body;

  if (!adminAddress) {
    return res.status(400).json({ error: '–¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–æ–∫ X-Admin-Address' });
  }

  if (!configData || typeof configData !== 'object') {
    return res.status(400).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏' });
  }

  try {
    const configPath = getConfigPath(adminAddress);
    await fs.writeFile(configPath, JSON.stringify(configData, null, 2));
    res.status(200).json({ message: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞' });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∫–æ–Ω—Ñ–∏–≥–∞:', err);
    res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// --- –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ---
app.listen(PORT, '0.0.0.0', () => { // –°–ª—É—à–∞–µ–º –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö '0.0.0.0' –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö/–Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–∞—Ö
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∞–¥–º–∏–Ω–∫–∏ –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üîó –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:${PORT}`);
  // console.log(`üîó –°–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω): http://<–≤–∞—à_IP>:${PORT}`); // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
});
